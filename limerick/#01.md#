---
title: Tidal
geometry: margin=2cm
...

# Introduction

Welcome to this workshop on tidalcycles, known as *tidal* for short.

I'm Alex - alex@slab.org + http://slab.org/

Rough schedule for the two days:

Morning session: 9.30 - 12.30, 13.30 - 16:30

With natural breaks for tea drinking..

Join us at Pharmacia from 9pm on Tuesday.

## What is a cycle?

* Cyclic notion of time from Indian Classical music
* The end is also the beginning (the *sam*)
* Time in Tidal is based on cycles, rather than beats
* Cycles are ticking over all the time
* Cycles have fixed duration (which you can change with the *cps* command)

## Background

* TOPLAP
* Algorave

## Pattern

Types of pattern:

* Repetition
* Symmetry
* Interference
* Randomness/glitch

# Basics of (polyrhythmic) sequencing with Tidal

Before we get hands on, lets look at some visual renderings of tidal patterns.

Sequences in tidal are generally denoted with double quotes:

```{.haskell render="colour" cycles=6}
"red pink"
```

You can 'read' the above diagram clockwise, from the top. You can see
that the pattern repeats once per cycle. Six cycles are shown, but it
will go on for ever. Here's what happens if we add another element to the sequence:


```{.haskell render="colour" cycles=6}
"red pink blue"
```

## Make a sound

```
d1 $ sound "bd"
```

Stop making a sound!

```
d1 silence
```

Breaking that down..

* `d1` is a connection to the sound synthesiser, SuperDirt. There is also `d2`, up to `d9` or so.
* `$` passes what's on the right (`sound "bd"`) to what's on the left
  (`d1`). Without this, Tidal would only read as far as `sound` and
  get confused!
* `sound` says that a pattern of sounds (samples or synths) is coming up. That is, it turns a pattern of words into
* `"bd"` is a pattern of 


# Introduction to patterns - repetition, symmetry, interference and glitch

# Haskell syntax

# Ensemble play

# More complex patternings

# Strategies for live coding performance

# Composing with tidal

# Superdirt - synths, customisation, multichannel, midi control

# Visualisation

# Community

* http://tidalcycles.org/
* http://talk.lurk.org (e.g. #tidal, #livecode, #algorave channels)
* http://toplap.org/
* https://www.youtube.com/kindohm
* http://algorave.com/
* http://github.com/tidalcycles/
