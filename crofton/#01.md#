---
title: Tidal
geometry: margin=2cm
...

# Tidal

Welcome to this workshop on tidalcycles, known as *tidal* for short.

Rough schedule for day one:

## Morning

* Background to live coding
* Thinking about patterns
* Simple looping
* More complicated rhythms

## Afternoon

* Quipu
* Transforming patterns

# Looping sounds with TidalCycles

Using simple high (`h`) and low (`l`) drum sounds.

```
sound "h l"
```

Add more sounds, and it'll squeeze them in to the same rhythmic 'cycle'

```
sound "h h h h l l l l"
```

You can use `~` to add gaps to add rhythms:

```
sound "h ~ l ~ h l ~"
```

You can use `*` and a number to play a sound multiple times (in the
time of one):

```
sound "h*2 ~ l ~ h l*4 ~"
```

The conga rhythm "Have you got a dog, great big dog."

```
sound "h*4 l h*2 l"
```

Another way to put multiple sounds inside one, with `[` and `]`:

```
sound "h [l l l]"
```





```{.haskell render="colour" cycles=10}
every 3 (0.25 <~) "white lightblue blue darkblue"
```

Shift time, successively

```{.haskell render="colour" cycles=10}
iter 4 "white lightblue blue darkblue"
```

Combine transformations to get something unexpected

```{.haskell render="colour" cycles=10}
superimpose (fast "2 4") $ iter 4 $ superimpose rev
    $ every 3 (0.25 <~) $ "[white grey lightblue, orange red]"
```

